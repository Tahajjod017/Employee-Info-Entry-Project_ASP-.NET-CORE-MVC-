@{
    ViewData["Title"] = "Employee Information Report";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Employee Information Report</title>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
    <style>
        .loading {
            display: none;
            text-align: center;
            padding: 20px;
        }

        .table-responsive {
            max-height: 600px;
            overflow-y: auto;
        }

        .photo-thumbnail {
            width: 40px;
            height: 40px;
            object-fit: cover;
            border-radius: 4px;
        }

        .education-info {
            max-width: 200px;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
        }
    </style>
</head>
<body class="bg-light">
    <div class="container-fluid p-4">
        <div class="bg-white rounded shadow-sm overflow-hidden">
            <!-- Report Header -->
            <div class="bg-light p-4 border-bottom">
                <h1 class="h3 fw-semibold text-dark mb-0">Employee Information Report</h1>
            </div>

            <!-- Filter Section -->
            <div class="p-4 bg-white border-bottom">
                <div class="row g-3 mb-3">
                    <div class="col-md-3">
                        <label class="form-label small fw-medium text-muted">Department</label>
                        <select class="form-select form-select-sm" id="departmentFilter">
                            <option value="">All Departments</option>
                            @if (ViewBag.Departments != null)
                            {
                                @foreach (var dept in ViewBag.Departments)
                                {
                                    <option value="@dept.DepartmentName">@dept.DepartmentName</option>
                                }
                            }
                        </select>
                    </div>

                    <div class="col-md-2">
                        <label class="form-label small fw-medium text-muted">Joining Date (From)</label>
                        <input type="date" class="form-control form-control-sm" id="joiningDateFrom">
                    </div>

                    <div class="col-md-2">
                        <label class="form-label small fw-medium text-muted">Joining Date (To)</label>
                        <input type="date" class="form-control form-control-sm" id="joiningDateTo">
                    </div>

                    <div class="col-md-3">
                        <label class="form-label small fw-medium text-muted">Search (ID or Name)</label>
                        <input type="text" class="form-control form-control-sm" id="searchEmployee" placeholder="Enter ID or Name">
                    </div>

                    <div class="col-md-2 d-flex align-items-end">
                        <div class="d-flex gap-2">
                            <button class="btn btn-primary btn-sm fw-medium" onclick="applyFilters()">Apply Filters</button>
                            <button class="btn btn-secondary btn-sm fw-medium" onclick="resetFilters()">Reset</button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Export Section -->
            <div class="p-4 bg-white border-bottom">
                <div class="d-flex gap-2">
                    <button class="btn btn-success btn-sm fw-medium" onclick="exportToExcel()">Export to Excel</button>
                    <button class="btn btn-danger btn-sm fw-medium" onclick="exportToPDF()">Export to PDF</button>
                    <button class="btn btn-info btn-sm fw-medium" onclick="exportToWord()">Export to Word</button>
                </div>
            </div>

            <!-- Loading Indicator -->
            <div id="loadingIndicator" class="loading">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Loading...</span>
                </div>
                <p class="mt-2">Loading employee data...</p>
            </div>

            <!-- Table Section -->
            <div class="px-4 pb-4">
                <div class="table-responsive mt-3">
                    <table class="table table-bordered table-hover mb-0">
                        <thead class="table-light">
                            <tr>
                                <th scope="col" class="text-nowrap small fw-semibold text-muted" style="width: 60px;">Sl No.</th>
                                <th scope="col" class="text-nowrap small fw-semibold text-muted" style="width: 100px;">Employee ID</th>
                                <th scope="col" class="text-nowrap small fw-semibold text-muted" style="width: 180px;">Employee Name</th>
                                <th scope="col" class="text-nowrap small fw-semibold text-muted" style="width: 120px;">Address</th>
                                <th scope="col" class="text-nowrap small fw-semibold text-muted" style="width: 120px;">Designation</th>
                                <th scope="col" class="text-nowrap small fw-semibold text-muted" style="width: 120px;">Department</th>
                                <th scope="col" class="text-nowrap small fw-semibold text-muted" style="width: 150px;">Development Skills</th>
                                <th scope="col" class="text-nowrap small fw-semibold text-muted" style="width: 120px;">Joining Date</th>
                                <th scope="col" class="text-nowrap small fw-semibold text-muted" style="width: 120px;">Phone</th>
                                <th scope="col" class="text-nowrap small fw-semibold text-muted" style="width: 180px;">Email</th>
                                <th scope="col" class="text-nowrap small fw-semibold text-muted" style="width: 120px;">Gross Salary</th>
                                <th scope="col" class="text-nowrap small fw-semibold text-muted" style="width: 80px;">Photo</th>
                                <th scope="col" class="text-nowrap small fw-semibold text-muted" style="width: 250px;">Educational Info</th>
                            </tr>
                        </thead>
                        <tbody id="employeeTableBody" class="small">
                            <!-- Data will be populated here -->
                        </tbody>
                    </table>
                </div>
            </div>

            <!-- Results Info -->
            <div id="resultsInfo" class="px-4 pb-2">
                <span class="small text-muted">No results to display</span>
            </div>

            <!-- Pagination Section -->
            <div class="d-flex justify-content-between align-items-center p-4 border-top bg-light">
                <div class="small text-muted">
                    <span id="paginationInfo">Page 1 of 1</span>
                </div>
                <div class="d-flex gap-1">
                    <button class="btn btn-outline-secondary btn-sm disabled">Previous</button>
                    <button class="btn btn-primary btn-sm">1</button>
                    <button class="btn btn-outline-secondary btn-sm disabled">Next</button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>
    <script>
        let currentData = [];
        let currentPage = 1;
        let totalPages = 1;

        // Load data on page load
        document.addEventListener('DOMContentLoaded', function() {
            const today = new Date().toISOString().split('T')[0];
            document.getElementById('joiningDateFrom').max = today;
            document.getElementById('joiningDateTo').max = today;

            // Load initial data
            applyFilters();
        });

        async function applyFilters(page = 1) {
            const department = document.getElementById('departmentFilter').value;
            const dateFrom = document.getElementById('joiningDateFrom').value;
            const dateTo = document.getElementById('joiningDateTo').value;
            const search = document.getElementById('searchEmployee').value;

            showLoading(true);

            try {
                const formData = new FormData();
                if (department) formData.append('department', department);
                if (dateFrom) formData.append('joiningDateFrom', dateFrom);
                if (dateTo) formData.append('joiningDateTo', dateTo);
                if (search) formData.append('search', search);
				formData.append('page', page);

                const response = await fetch('/Report/GetFilteredEmployees', {
                    method: 'POST',
                    body: formData
                });

                const result = await response.json();

                if (result.success) {
                    currentData = result.data;
					currentPage = result.pagination.currentPage;
					totalPages = result.pagination.totalPages;

                    populateTable(result.data);
                    updateResultsInfo(result.data.length);
                } else {
                    showError(result.message || 'Error loading data');
                }
            } catch (error) {
                console.error('Error:', error);
                showError('Network error occurred');
            } finally {
                showLoading(false);
            }
        }
        //Update Pagination
               function updatePagination(pagination) {
            // Update pagination display
            const pageInfo = document.querySelector('.pagination-info');
            if (pageInfo) {
                pageInfo.textContent = `Page ${pagination.currentPage} of ${pagination.totalPages}`;
            }

            // Update pagination buttons
            const prevBtn = document.getElementById('prevBtn') || document.querySelector('.btn:contains("Previous")');
            const nextBtn = document.getElementById('nextBtn') || document.querySelector('.btn:contains("Next")');
            const currentPageSpan = document.querySelector('.current-page') || document.querySelector('span:contains("1")');

            if (prevBtn) {
                prevBtn.disabled = !pagination.hasPrevious;
                prevBtn.onclick = () => pagination.hasPrevious ? applyFilters(pagination.currentPage - 1) : null;
            }

            if (nextBtn) {
                nextBtn.disabled = !pagination.hasNext;
                nextBtn.onclick = () => pagination.hasNext ? applyFilters(pagination.currentPage + 1) : null;
            }

            if (currentPageSpan) {
                currentPageSpan.textContent = pagination.currentPage;
            }
        }
        //Add Navigation Function
                function goToPage(page) {
            if (page >= 1 && page <= totalPages) {
                applyFilters(page);
            }
        }
        function goToPreviousPage() {
			if(currentPage > 1){
				applyFilters(currentPage - 1);
			}
        }

        function goToNextPage(){
			if (currentPage < totalPages) {
				applyFilters(currentPage + 1);
            }
        }


        function populateTable(employees) {
            const tbody = document.getElementById('employeeTableBody');

            if (employees.length === 0) {
                tbody.innerHTML = `
                    <tr>
                        <td colspan="13" class="text-center text-muted py-4">
                            No employees found matching your criteria
                        </td>
                    </tr>
                `;
                return;
            }

            tbody.innerHTML = employees.map(emp => `
                <tr>
                    <td>${emp.slNo}</td>
                    <td>${emp.employeeID}</td>
                    <td>${emp.name}</td>
                    <td>${emp.address || ''}</td>
                    <td>${emp.designation}</td>
                    <td>${emp.department}</td>
                    <td>${emp.developmentSkills}</td>
                    <td>${emp.joiningDate}</td>
                    <td>${emp.phone || ''}</td>
                    <td>${emp.email || ''}</td>
                    <td>${emp.grossSalary ? '$' + emp.grossSalary.toLocaleString() : ''}</td>
                    <td>
                        ${emp.photoPath
                            ? `<img src="${emp.photoPath}" alt="Photo" class="photo-thumbnail" onerror="this.style.display='none'">`
                            : '<span class="text-muted">No Photo</span>'
                        }
                    </td>
                    <td>
                        <div class="education-info" title="${emp.educationalInfo}">
                            ${emp.educationalInfo}
                        </div>
                    </td>
                </tr>
            `).join('');
        }

        function updateResultsInfo(count) {
            const info = document.getElementById('resultsInfo');
            info.innerHTML = `<span class="small text-muted">Showing ${count} employee${count !== 1 ? 's' : ''}</span>`;
        }

        function resetFilters() {
            document.getElementById('departmentFilter').value = '';
            document.getElementById('joiningDateFrom').value = '';
            document.getElementById('joiningDateTo').value = '';
            document.getElementById('searchEmployee').value = '';

            currentPage = 1; //Reset to first page
            applyFilters();
        }

        function showLoading(show) {
            const loading = document.getElementById('loadingIndicator');
            const table = document.querySelector('.table-responsive');

            if (show) {
                loading.style.display = 'block';
                table.style.opacity = '0.5';
            } else {
                loading.style.display = 'none';
                table.style.opacity = '1';
            }
        }

        function showError(message) {
            const tbody = document.getElementById('employeeTableBody');
            tbody.innerHTML = `
                <tr>
                    <td colspan="13" class="text-center text-danger py-4">
                        <i class="fas fa-exclamation-triangle"></i> ${message}
                    </td>
                </tr>
            `;
        }

        function getFilterParams() {
            const params = new URLSearchParams();
            const department = document.getElementById('departmentFilter').value;
            const dateFrom = document.getElementById('joiningDateFrom').value;
            const dateTo = document.getElementById('joiningDateTo').value;
            const search = document.getElementById('searchEmployee').value;

            if (department) params.append('department', department);
            if (dateFrom) params.append('joiningDateFrom', dateFrom);
            if (dateTo) params.append('joiningDateTo', dateTo);
            if (search) params.append('search', search);

            return params.toString();
        }

        function exportToExcel() {
            const params = getFilterParams();
            window.open(`/Report/ExportToExcel?${params}`, '_blank');
        }

        function exportToPDF() {
            const params = getFilterParams();
            window.open(`/Report/ExportToPDF?${params}`, '_blank');
        }

        function exportToWord() {
            alert('Word export functionality would be implemented here. You can extend the controller to support Word export using DocumentFormat.OpenXml or similar libraries.');
        }
    </script>
</body>
</html>