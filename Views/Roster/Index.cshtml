
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
	ViewData["Title"] = "Roster Schedule Entry";
	var employees = ViewBag.Employees as List<EmployeeMvc.Models.Employeeinfo>;
	var rosterData = ViewBag.RosterData as List<dynamic>;
}
<style>
	#loadingOverlay.show {
		display: flex !important;
	}
</style>
<link href="https://cdn.jsdelivr.net/npm/choices.js@11.1.0/public/assets/styles/choices.min.css" rel="stylesheet">

<!--Multiselect CDN-->
<script src="https://cdn.jsdelivr.net/npm/choices.js/public/assets/scripts/choices.min.js"></script>



<div class="container-fluid">
	<div class="row">
		<div class="col-12">
			<div class="card">
				<!-- Roster Schedule Entry Header -->
				<div class="card-header bg-light text-center border">
					<h5 class="mb-0">Roster Schedule Entry</h5>
				</div>
				<div class="card-body">
					<form id="rosterForm" method="post">
						<div class="row">
							<!-- Left Section - Date Range -->
							<div class="col-3">
								<div class="border p-3 bg-white h-auto">
									<div class="row mb-3">
										<div class="col-10">
											<label class="form-label">Shift</label>
											<input type="text" class="form-control form-control-sm" id="shift" name="Shift">
										</div>
									</div>
								</div>
							</div>

							<!-- Middle Section - Employee List -->
							<div class="col-8">
								<div class="border bg-white p-3 mb-3">
									<div class="text-center mb-2">
										<strong>Emp. List</strong>
									</div>

									<!-- Search Header -->
									<div class="bg-light p-2 border-bottom text-center fw-bold">
										Search
									</div>

									<!-- Employee Table -->
									<div class="table-responsive">
										<table class="table table-bordered table-sm mb-0 ">
											<thead class="table-light">
												<tr class="text-center">
													<th style="width: 60px;">Select</th>
													<th style="width: 80px;">Emp.ID</th>
													<th style="width: 120px;">Name</th>
													<th style="width: 120px;">Designation</th>
												</tr>
											</thead>
											<tbody id="employeeListBody" class="text-center">
											</tbody>
										</table>
									</div>
								</div>
							</div>
						</div>

						<!-- Action Buttons -->
						<div class="row mt-3 mb-3">
							<div class="col-12">
								<button type="submit" id="saveRosterBtn" class="btn btn-sm btn-success me-2">Save Roster</button>
								<button type="button" id="clearRosterBtn" class="btn btn-sm btn-secondary">Clear</button>
							</div>
						</div>
					</form>

					<!-- Entries Section  <!-- Search Section -->
					<div class="border bg-light p-3 rounded shadow-sm">
						<div class="d-flex align-items-center">
							<strong class="me-2">Roster Schedule Entry Data:</strong>
						</div>

						<div class="row align-items-end g-3 mb-lg-3"> <!--First Row-->
							<div class="d-flex align-items-center gap-3 w-100">
								<!-- Name Dropdown -->
								<div class="d-flex flex-column" style="flex: 1;">
									<label class="form-label fw-medium mb-1 small">Name</label>
									<select class="form-select form-select-sm" id="nameFilter" name="SelectedNames" multiple>
										<option value="">All</option>
										@if (ViewBag.Employess != null)
										{
											@foreach (var name in ViewBag.Employess)
											{
												<option value="@name">@name</option>
											}
										}
									</select>
								</div>

								<!-- Shift Dropdown -->
								<div class="d-flex flex-column" style="flex: 1;">
									<label class="form-label fw-medium mb-1 small">Shift</label>
									<select class="form-select form-select-sm" id="shiftFilter">
										<option value="">All</option>
										@if (ViewBag.Shifts != null)
										{
											@foreach (var shift in ViewBag.Shifts)
											{
												<option value="@shift">@shift</option>
											}
										}
									</select>
								</div>

								<!-- Date From -->
								<div class="d-flex flex-column" style="flex: 1;">
									<label class="form-label fw-medium mb-1 small">Date From</label>
									<input type="date" class="form-control form-control-sm" id="dateFroms" name="DateFrom" />
								</div>

								<!-- Date To -->
								<div class="d-flex flex-column" style="flex: 1;">
									<label class="form-label fw-medium mb-1 small">Date To</label>
									<input type="date" class="form-control form-control-sm" id="dateTos" name="DateTo" />
								</div>
							</div>
						</div>

						<!--Show Entries-->
						<div class="d-flex align-items-center justify-content-start gap-3 mb-3">
							<div id="entriesPageWarpper" class="dataTables_length">
								<label class="mb-0">
									Show
									<select id="entriesPage" class="form-select form-select-sm d-inline-block w-auto">
										<option value="10">10</option>
										<option value="25">25</option>
										<option value="50">50</option>
										<option value="100">100</option>
									</select>
									entries
								</label>
							</div>
							<!--Input for showing request-->
							<div>
								<input type="text" id="requestTimeInput"
									   class="form-control form-control-sm"
									   style="width:150px;"
									   placeholder="Request time"
									   readonly />
							</div>

							<!--Loading Live Indecator-->
							<div id="loadingOverlay" class="position-fixed top-0 start-0 w-100 h-100 d-none align-items-center justify-content-center"
								 style="background: rgba(0, 0, 0, 0.5); z-index: 9999;">
								<div class="bg-white p-4 rounded-3 text-center shadow-lg" style="min-width: 250px;">
									<div class="spinner-border text-primary mb-3" role="status" style="width: 3rem; height: 3rem;">
										<span class="visually-hidden">Loading...</span>
									</div>
									<p class="mb-2 fw-bold">Loading Data...</p>
									<p class="mb-0 text-muted small">
										Request time: <span id="requestTime" class="fw-semibold text-primary">0.0s</span>
									</p>
								</div>
							</div>

							<!--Search-->
							<div class="col-md-8 justify-content-end d-flex ">
								<div class="pe-1">
									<label class="form-label fw-medium mb-1 small text-start">Search</label>
								</div>
								<div class="d-flex flex-column align-items-end">
									<input type="text"
										   style="width:200px;"
										   class="form-control form-control-sm"
										   id="rosterSearch"
										   placeholder="Search in roster data" />
								</div>
							</div>
						</div>
					</div>

					<!-- Roster Data Table -->
					<div class="table-responsive">
						<table class="table table-striped table-bordered table-sm " id="rosterDataTable">
							<thead class="table-light">
								<tr class="text-center">
									<th style="width: 60px;">ID</th>
									<th style="width: 80px;">Emp.ID</th>
									<th style="width: 120px;">Name</th>
									<th style="width: 120px;">Designation</th>
									<th style="width: 100px;">Date</th>
									<th style="width: 80px;">Day</th>
									<th style="width: 80px;">Shift</th>
									<th style="width: 100px;">Time From</th>
									<th style="width: 80px;">To</th>
									<th style="width: 100px;">Action</th>
								</tr>
							</thead>
							<tbody id="rosterTableBody" class="text-center">
							</tbody>
						</table>
					</div>

					<!-- Bottom Pagination Section -->
					<div class="d-flex justify-content-between align-items-center mt-3">
						<div class="text-muted small">
						</div>
						<nav>
							<ul class="pagination mb-0 pagination-sm">
								<li class="page-item">
									<a class="page-link" href="#" id="firstPage">First</a>
								</li>
								<li class="page-item">
									<a class="page-link" href="#" id="prevPage">Previous</a>
								</li>
								<li class="page-item active">
									<a class="page-link" href="#" data-page="1">1</a>
								</li>
								<li class="page-item">
									<a class="page-link" href="#" data-page="2">2</a>
								</li>
								<li class="page-item">
									<a class="page-link" href="#" id="nextPage">Next</a>
								</li>
								<li class="page-item">
									<a class="page-link" href="#" id="lastPage">Last</a>
								</li>
							</ul>
						</nav>
					</div>
				</div>
			</div>
		</div>
	</div>
</div>

@section Scripts {
	<script src="~/js/roster.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/choices.js@11.1.0/public/assets/scripts/choices.min.js"></script>

	<script src="https://cdn.jsdelivr.net/npm/choices.js/public/assets/scripts/choices.min.js"></script>

	

}


@* <script>
    $(document).ready(function() {
        // Page size selector functionality
        $('.page-size-btn').click(function() {
            $('.page-size-btn').removeClass('active');
            $(this).addClass('active');
            var pageSize = $(this).data('size');
            // Implement page size change logic here
            console.log('Page size changed to: ' + pageSize);
        });

        // Form submission
        $('#rosterForm').submit(function(e) {
            e.preventDefault();
            var selectedEmployees = [];
            $('.emp-checkbox:checked').each(function() {
                selectedEmployees.push($(this).val());
            });

            var formData = {
                DateFrom: $('#dateFrom').val(),
                DateTo: $('#dateTo').val(),
                Shift: $('#shift').val(),
                SelectedEmployees: selectedEmployees
            };

            // AJAX call to save roster
            $.ajax({
                url: '@Url.Action("SaveRoster", "Roster")',
                type: 'POST',
                data: formData,
                success: function(response) {
                    if(response.success) {
                        alert('Roster saved successfully!');
                        // Reload roster data
                        loadRosterData();
                    } else {
                        alert('Error saving roster: ' + response.message);
                    }
                },
                error: function() {
                    alert('An error occurred while saving the roster.');
                }
            });
        });

        // Clear form
        $('#clearRosterBtn').click(function() {
            $('#rosterForm')[0].reset();
            $('.emp-checkbox').prop('checked', false);
        });

        // Edit roster functionality
        $(document).on('click', '.editRosterBtn', function() {
            var rosterId = $(this).data('id');
            // Implement edit functionality
            console.log('Edit roster ID: ' + rosterId);
        });

        // Entries per page change
        $('#entriesPerPage').change(function() {
            var entriesPerPage = $(this).val();
            // Implement entries per page change logic
            console.log('Entries per page changed to: ' + entriesPerPage);
        });

        // Pagination functionality
        $('.page-link').click(function(e) {
            e.preventDefault();
            var page = $(this).data('page');
            if(page) {
                // Load specific page
                loadRosterData(page);
            }
        });

        // Load roster data function
        function loadRosterData(page = 1) {
            $.ajax({
                url: '@Url.Action("GetRosterData", "Roster")',
                type: 'GET',
                data: { page: page, entriesPerPage: $('#entriesPerPage').val() },
                success: function(response) {
                    // Update roster table with new data
                    updateRosterTable(response.data);
                    updatePagination(response.pagination);
                },
                error: function() {
                    console.log('Error loading roster data');
                }
            });
        }

        function updateRosterTable(data) {
            // Update roster table body with new data
            // Implementation depends on your data structure
        }

        function updatePagination(pagination) {
            // Update pagination info and controls
            // Implementation depends on your pagination structure
        }
    });
</script> *@